TRUE ~ as.character(name_sort)))
data_Q6_Europe <-europe_cropped  %>%
left_join(spending_long_alldiseases_recipient, c("iso_a3"="recipient_isocode"))
europe <- world %>%
filter(continent == "Europe") %>%
filter(!sovereignt== "Russia") %>%
st_transform(crs = 'ESRI:54030')
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_cropped,
fill = NA,
color = "red",
size = 0.8) +
theme_void() +
coord_sf(xlim = europe_bb[c(1, 3)],
ylim = europe_bb[c(2, 4)])
europe_inset_map
plot_europe<-ggplot() +
coord_sf()+
geom_sf(data = data_Q6_Europe,
aes(fill = expenditure_alldiseases))+theme_void()+
labs(title="Dollars received by Europe continent in treating all diseases for year 2015",
caption = "Source: IHME Development Assistance for Health Database")
library(patchwork)
layout <- c(
patchwork::area(t = 1, l = 1, b = 7, r = 9),
patchwork::area(t = 1, l = 0, b = 6, r = 3)
)
plot_europe + europe_inset_map +
plot_layout(design = layout)
europe_map = ggplot() +
geom_sf(data = world, colour = "lightgrey",
fill = "transparent",
size = 0.5) +
geom_sf(data = data_Q6_Europe,
aes(fill = expenditure_alldiseases_millions),
alpha = 1,
color = "lightgrey",
size = 0.3) +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
europe_map
europe_inset_map
View(europe_cropped)
data_Q6_Europe <-europe_cropped  %>%
left_join(spending_long_alldiseases_recipient, c("iso_a3"="recipient_isocode"))
europe <- world %>%
filter(continent == "Europe") %>%
filter(!sovereignt== "Russia") %>%
st_transform(crs = 'ESRI:54030')
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_cropped,
fill = NA,
color = "red",
size = 0.8) +
theme_void()
europe_inset_map
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_cropped,
fill = NA,
color = "magenta",
size = 0.8) +
theme_void()
europe_inset_map
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_cropped,
fill = NA,
color = "magenta",
size = 0.8) +
theme_void() +
coord_sf(xlim = europe_bb[c(1, 3)],
ylim = europe_bb[c(2, 4)])
europe_inset_map
europe_bb
europe_bb <- st_bbox(c(xmin = -28,
xmax = 62,
ymax = 69,
ymin = 35),
crs = st_crs(4326)) %>%
st_as_sfc()
europe_bb
st_transform(crs= 'ESRI:54030') %>%
st_bbox()
europe_bb <- st_bbox(c(xmin = -28,
xmax = 62,
ymax = 69,
ymin = 35),
crs = st_crs(4326)) %>%
st_as_sfc() %>%
st_transform(crs= 'ESRI:54030') %>%
st_bbox()
europe_bb
europe_rectangle <- world %>%
filter(continent == "Europe") %>%
filter(!sovereignt== "Russia") %>%
st_transform(crs = 'ESRI:54030') %>%
st_bbox() %>%
st_as_sfc()
europe_rectangle
europe_rectangle <- world %>%
filter(continent == "Europe") %>%
filter(!sovereignt== "Russia") %>%
st_transform(crs = 'ESRI:54030') %>%
st_bbox() %>%
st_as_sfc() %>%
st_buffer(3000)
europe_rectangle
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_rectangle,
fill = NA,
color = "magenta",
size = 0.8) +
theme_void() +
coord_sf(xlim = europe_bb[c(1, 3)],
ylim = europe_bb[c(2, 4)])
europe_inset_map
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_rectangle,
fill = NA,
color = "magenta",
size = 0.8) +
theme_void()
europe_inset_map
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_rectangle,
fill = NA,
color = "magenta",
size = 0.1) +
theme_void()
europe_inset_map
world_somerc<world %>%
st_transform(world, crs=2056)
world_somerc<-world %>%
st_transform(world, crs=2056)
world_somerc
europe_rectangle <- world %>%
filter(continent == "Europe") %>%
filter(!sovereignt== "Russia") %>%
st_transform(crs = 'ESRI:54030') %>%
st_bbox() %>%
st_as_sfc() %>%
st_buffer(30000)
europe_inset_map <- ggplot() +
geom_sf(data = world,
fill = "white",
size = 0.3,
colour = "lightgrey") +
geom_sf(data = europe_rectangle,
fill = NA,
color = "magenta",
size = 0.8) +
theme_void()
europe_inset_map
europe_bb<-world_somerc %>%
filter(continent == "Europe") %>%
filter(!sovereignt== "Russia") %>%
st_bbox() %>%
st_as_sfc() %>%
st_buffer(30000) %>%
st_bbox()
View(data_Q6_Europe)
europe_map = ggplot() +
geom_sf(data = world_somerc, colour = "lightgrey",
fill = "transparent",
size = 0.5)+
geom_sf(data = europe_border,  # how to get this
fill = "transparent",
color = "grey",
size = 1)+
geom_sf(data = data_Q6_Europe,  # how to get this
aes(fill = expenditure_alldisease_millions),
color = "yellow",
size = 1)+
scale_fill_carto_d(palette = "BurgYl") +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
# geom_sf(data = europe_border,  # how to get this
#   fill = "transparent",
#   color = "grey",
#   size = 1)+
europe_map = ggplot() +
geom_sf(data = world_somerc, colour = "lightgrey",
fill = "transparent",
size = 0.5)+
# geom_sf(data = europe_border,  # how to get this
#   fill = "transparent",
#   color = "grey",
#   size = 1)+
geom_sf(data = data_Q6_Europe,  # how to get this
aes(fill = expenditure_alldisease_millions),
color = "yellow",
size = 1)+
scale_fill_carto_d(palette = "BurgYl") +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
europe_map = ggplot() +
geom_sf(data = world_somerc, colour = "lightgrey",
fill = "transparent",
size = 0.5)+
# geom_sf(data = europe_border,  # how to get this
#   fill = "transparent",
#   color = "grey",
#   size = 1)+
geom_sf(data = data_Q6_Europe,  # how to get this
aes(fill = expenditure_alldisease_millions),
color = "yellow",
size = 1)+
#scale_fill_carto_d(palette = "BurgYl") +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
europe_map
europe_map = ggplot() +
geom_sf(data = world_somerc, colour = "lightgrey",
fill = "transparent",
size = 0.5)+
# geom_sf(data = europe_border,  # how to get this
#   fill = "transparent",
#   color = "grey",
#   size = 1)+
geom_sf(data = data_Q6_Europe,  # how to get this
aes(fill = expenditure_alldiseases_millions),
color = "yellow",
size = 1)+
#scale_fill_carto_d(palette = "BurgYl") +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
europe_map
europe_map = ggplot() +
geom_sf(data = world_somerc, colour = "lightgrey",
fill = "transparent",
size = 0.5)+
# geom_sf(data = europe_border,  # how to get this
#   fill = "transparent",
#   color = "grey",
#   size = 1)+
geom_sf(data = data_Q6_Europe,  # how to get this
aes(fill = expenditure_alldiseases_millions),
size = 1)+
#scale_fill_carto_d(palette = "BurgYl") +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
europe_map
europe_map = ggplot() +
geom_sf(data = world_somerc, colour = "lightgrey",
fill = "transparent",
size = 0.5)+
# geom_sf(data = europe_border,  # how to get this
#   fill = "transparent",
#   color = "grey",
#   size = 1)+
geom_sf(data = data_Q6_Europe,  # how to get this
aes(fill = expenditure_alldiseases_millions),
size = 0.2)+
#scale_fill_carto_d(palette = "BurgYl") +
theme_void() +
coord_sf(xlim = st_bbox(europe_bb)[c(1, 3)],
ylim = st_bbox(europe_bb)[c(2, 4)]) +
labs(title = "Average per capita yearly income by district, in 2018")+
guides(fill = guide_legend(title = "",
label.position = "bottom",
title.position = "top",
nrow = 1))+
theme(legend.position = "bottom") +
theme(plot.title = element_text(colour = "darkgrey"))
europe_map
library(patchwork)
layout <- c(
patchwork::area(t = 1, l = 1, b = 7, r = 9),
patchwork::area(t = 1, l = 0, b = 6, r = 3)
)
plot_europe + europe_inset_map +
plot_layout(design = layout)
data(countryRegions,envir=environment(),package="rworldmap")
# gbdregions <- countryRegions %>%
#   select(ISO3, ADMIN, GBD) %>%
#   filter(!is.na(GBD))
getbb("zurich") %>%
opq()
getbb("zurich") %>%
opq() %>%
add_osm_feature(
key = "highway",
value = c(
"motorway", "primary",
"secondary", "tertiary"
)
)%>%
osmdata_sf()
# features_glimpse<-getbb("zurich") %>%
#   opq() %>%
#   add_osm_feature(
#     key = "highway",
#     value = c(
#       "motorway", "primary",
#       "secondary", "tertiary"
#     )
#   ) %>%
#   osmdata_sf() %>%
#   purrr::pluck("osm_lines") %>%
#   glimpse()
xc<-getbb("zurich") %>%
opq() %>%
add_osm_feature(
key = "highway",
value = c(
"motorway", "primary",
"secondary", "tertiary"
)
) %>%
osmdata_sf() %>%
purrr::pluck("osm_lines") %>%
#glimpse() %>%
pull(highway) %>%
summary()
getbb("zurich") %>%
opq() %>%
add_osm_feature(
key = "highway",
value = c(
"motorway", "primary",
"secondary", "tertiary"
)
) %>%
osmdata_sf() %>%
purrr::pluck("osm_lines") %>%
ggplot() +
geom_sf(aes(color = highway))
opq_zurich<-opq(c(8.448006, 47.320220,  8.625441,  47.434666))
lakes <- opq_zurich %>%
add_osm_feature(key = "natural", value = "water") %>%
osmdata_sf() %>%
unname_osmdata_sf() %>%
purrr::pluck("osm_multipolygons")
streets<-opq_zurich %>%
add_osm_feature(
key = "highway",
value = c(
"motorway", "primary",
"secondary", "tertiary"
)
) %>%
osmdata_sf() %>%
purrr::pluck("osm_lines")
destination<-opq_zurich %>%
add_osm_feature(
key = "destination",
value = c(
"Bern", "Chur", "Luzern", "Flughafen"
)
) %>%
osmdata_sf() %>%
purrr::pluck("osm_lines")
small_streets <- opq_zurich %>%
add_osm_feature(
key = "highway",
value = c(
"residential", "living_street",
"unclassified",
"service", "footway"
)
) %>%
osmdata_sf() %>%
purrr::pluck("osm_lines")
river <- opq_zurich %>%
add_osm_feature(key = 'waterway', value = 'river') %>%
osmdata_sf() %>%
purrr::pluck('osm_lines')
ggplot() +
geom_sf(data = streets, color = "#bdbdbd", size = 1) +
geom_sf(data = small_streets, color = "#d9d9d9", alpha = 0.6) +
geom_sf(data = river,  color = "#d0d1e6", size = 1) +
geom_sf(data = lakes, fill = "blue", color = "blue",alpha = 0.2) +
theme_void() +
#geom_sf(data=destination, color = "#bdbdbd", size = 1)+
coord_sf(
xlim = c(8.448006, 8.625441),
ylim = c(47.320220, 47.434666),
expand = FALSE
)+
theme(
plot.background = element_rect(fill = "#F9F8F5"),
panel.border = element_blank()
)
library(tmap)
library(sf)
library(raster)
sitg<- st_read("data/sitg/CAD_BATIMENT_HORSOL_TOIT_SP.shp") %>%
janitor::clean_names()
sitg<- st_read("data/sitg/CAD_BATIMENT_HORSOL_TOIT_SP.shp") %>%
janitor::clean_names()
osmbb <-  tmaptools::bb(sitg, ext=1.1)
osmtiles <- tmaptools::read_osm(osmbb, type="esri-topo")
sitg<- st_read("data/sitg/CAD_BATIMENT_HORSOL_TOIT_SP.shp") %>%
janitor::clean_names()
osmbb <-  tmaptools::bb(sitg, ext=1.1)
osmtiles <- tmaptools::read_osm(osmbb, type="esri-topo")
tm_shape(osmtiles) +
tm_rgb() +
tm_shape(sitg) +
tm_polygons("altitude_m",
style = "quantile",
palette = "RdYlGn",
alpha = 0.6) +
tm_tiles("Stamen.TonerLabels")
library(tmap)
library(raster)
sitg<- st_read("data/sitg/CAD_BATIMENT_HORSOL_TOIT_SP.shp") %>%
janitor::clean_names()
sitg<- st_read("data/sitg/CAD_BATIMENT_HORSOL_TOIT_SP.shp") %>%
janitor::clean_names()
osmbb <-  tmaptools::bb(sitg, ext=1.1)
osmtiles <- tmaptools::read_osm(osmbb, type="esri-topo")
tm_shape(osmtiles) +
tm_rgb() +
tm_shape(sitg) +
tm_polygons("altitude_m",
style = "quantile",
palette = "RdYlGn",
alpha = 0.6) +
tm_tiles("Stamen.TonerLabels")
tmap_mode("plot")
tm_shape(sitg)+
tm_polygons(col = "altitude_m",
style = "quantile",
palette = "-viridis")+
tm_shape(land) +
tm_polygons(col = "lightblue")
tm_layout(frame = FALSE)
tmap_mode("plot")
tm_shape(osmtiles) +
tm_rgb() +
tm_shape(sitg) +
tm_polygons("altitude_m",
style = "quantile",
palette = "RdYlGn",
alpha = 0.6) +
tm_tiles("Stamen.TonerLabels")
